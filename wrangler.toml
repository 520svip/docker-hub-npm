#:schema node_modules/wrangler/config-schema.json
name = "docker-hub-npm"
main = "src/index.js"
compatibility_date = "2023-05-18"
compatibility_flags = ["nodejs_compat"]

# 域和路由
# 文档: https://developers.cloudflare.com/workers/configuration/routing/
# 域配置: https://developers.cloudflare.com/workers/configuration/routing/custom-domains/#set-up-a-custom-domain-in-your-wranglertoml
# 路由配置: https://developers.cloudflare.com/workers/configuration/routing/routes/#set-up-a-route-in-wranglertoml
workers_dev = true
routes = [
  { pattern = "hub.1panel.dev/*", zone_name = "1panel.dev" },
  { pattern = "docker.1panel.dev/*", zone_name = "1panel.dev" },
  { pattern = "quay.1panel.dev/*", zone_name = "1panel.dev" },
  { pattern = "gcr.1panel.dev/*", zone_name = "1panel.dev" },
  { pattern = "k8s-gcr.1panel.dev/*", zone_name = "1panel.dev" },
  { pattern = "k8s.1panel.dev/*", zone_name = "1panel.dev" },
  { pattern = "ghcr.1panel.dev/*", zone_name = "1panel.dev" },
  { pattern = "cloudsmith.1panel.dev/*", zone_name = "1panel.dev" },
  { pattern = "nvcr.1panel.dev/*", zone_name = "1panel.dev" },
]

# Workers 日志
# 文档: https://developers.cloudflare.com/workers/observability/logs/workers-logs/
# 配置: https://developers.cloudflare.com/workers/observability/logs/workers-logs/#enable-workers-logs
[observability]
enabled = true 

# 自动将您的工作负载放置在最佳位置，以最小化延迟。
# 如果您在 Worker 中运行后端逻辑，将其靠近您的后端基础设施
# 而不是最终用户可能会获得更好的性能。
# 文档: https://developers.cloudflare.com/workers/configuration/smart-placement/#smart-placement
# [placement]
# mode = "smart"

# 变量绑定。这些是任意的明文字符串（类似于环境变量）
# 文档:
# - https://developers.cloudflare.com/workers/wrangler/configuration/#environment-variables
# 注意: 使用密钥来存储敏感数据。
# - https://developers.cloudflare.com/workers/configuration/secrets/
# [vars]
# MY_VARIABLE = "production_value"

# 绑定 Workers AI 模型目录。在 Cloudflare 的全球网络上运行机器学习模型，支持无服务器 GPU
# 文档: https://developers.cloudflare.com/workers/wrangler/configuration/#workers-ai
# [ai]
# binding = "AI"

# 绑定一个分析引擎数据集。使用分析引擎在您的 Pages 功能中编写分析。
# 文档: https://developers.cloudflare.com/workers/wrangler/configuration/#analytics-engine-datasets
# [[analytics_engine_datasets]]
# binding = "MY_DATASET"

# 绑定一个在 Cloudflare 全球网络上运行的无头浏览器实例。
# 文档: https://developers.cloudflare.com/workers/wrangler/configuration/#browser-rendering
# [browser]
# binding = "MY_BROWSER"

# 绑定一个 D1 数据库。D1 是 Cloudflare 的原生无服务器 SQL 数据库。
# 文档: https://developers.cloudflare.com/workers/wrangler/configuration/#d1-databases
# [[d1_databases]]
# binding = "MY_DB"
# database_name = "my-database"
# database_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"

# 绑定一个调度命名空间。使用 Workers for Platforms 代表客户以编程方式部署无服务器函数。
# 文档: https://developers.cloudflare.com/workers/wrangler/configuration/#dispatch-namespace-bindings-workers-for-platforms
# [[dispatch_namespaces]]
# binding = "MY_DISPATCHER"
# namespace = "my-namespace"

# 绑定一个持久对象。持久对象是基于演员模型的零规模计算原语。
# 持久对象可以根据需要存活。需要一个长时间运行的“服务器”时，例如在实时应用中使用它们。
# 文档: https://developers.cloudflare.com/workers/wrangler/configuration/#durable-objects
# [[durable_objects.bindings]]
# name = "MY_DURABLE_OBJECT"
# class_name = "MyDurableObject"

# 持久对象迁移。
# 文档: https://developers.cloudflare.com/workers/wrangler/configuration/#migrations
# [[migrations]]
# tag = "v1"
# new_classes = ["MyDurableObject"]

# 绑定一个 Hyperdrive 配置。用于加速从 Cloudflare Workers 访问现有数据库。
# 文档: https://developers.cloudflare.com/workers/wrangler/configuration/#hyperdrive
# [[hyperdrive]]
# binding = "MY_HYPERDRIVE"
# id = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"

# 绑定一个 KV 命名空间。使用 KV 作为小键值对的持久存储。
# 文档: https://developers.cloudflare.com/workers/wrangler/configuration/#kv-namespaces
# [[kv_namespaces]]
# binding = "MY_KV_NAMESPACE"
# id = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"

# 绑定一个 mTLS 证书。在与另一个服务通信时使用以提供客户端证书。
# 文档: https://developers.cloudflare.com/workers/wrangler/configuration/#mtls-certificates
# [[mtls_certificates]]
# binding = "MY_CERTIFICATE"
# certificate_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"

# 绑定一个队列生产者。使用此绑定调度可以由队列消费者稍后处理的任意任务。
# 文档: https://developers.cloudflare.com/workers/wrangler/configuration/#queues
# [[queues.producers]]
# binding = "MY_QUEUE"
# queue = "my-queue"
# 绑定一个队列消费者。队列消费者可以检索由生产者调度的任务以对其进行处理。
# 文档: https://developers.cloudflare.com/workers/wrangler/configuration/#queues
# [[queues.consumers]]
# queue = "my-queue"

# 绑定一个 R2 存储桶。使用 R2 存储任意大的数据块，例如文件。
# 文档: https://developers.cloudflare.com/workers/wrangler/configuration/#r2-buckets
# [[r2_buckets]]
# binding = "MY_BUCKET"
# bucket_name = "my-bucket"

# 绑定另一个 Worker 服务。使用此绑定在没有网络开销的情况下调用另一个 Worker。
# 文档: https://developers.cloudflare.com/workers/wrangler/configuration/#service-bindings
# [[services]]
# binding = "MY_SERVICE"
# service = "my-service"

# 绑定一个 Vectorize 索引。用于存储和查询语义搜索、分类和其他向量搜索用例的向量嵌入。
# 文档: https://developers.cloudflare.com/workers/wrangler/configuration/#vectorize-indexes
# [[vectorize]]
# binding = "MY_INDEX"
# index_name = "my-index"